오늘의 알고리즘 문제
어제 "map" 코드를 배웠으니 map에 관한 알고리즘 문제를 풀고 넘어갈 것이다.

문제 설명
자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.
예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.

제한사항
N의 범위 : 100,000,000 이하의 자연수

풀이

class Solution {
    fun solution(n: Int): Int {
return n.toString().map {it.toString().toInt()}.sum()       
    }
}
위 내용을 하나하나 설명하면,
n.toString(): 정수 n을 문자열로 변환
.map { ... }: 문자열의 각 자릿수에 대해 매핑을 수행
it.toString().toInt(): 각 자릿수를 다시 문자열로 변환하고 이를 정수로 변환
.sum(): 매핑된 정수들의 합을 계산
이러한 과정을 통해 정수 n의 각 자릿수의 합을 반환

*매핑이란? : 매핑(mapping)은 각 요소를 특정 규칙 또는 함수에 따라 다른 값으로 변환하는 과정을 말함. 

Kotlin의 map 함수는 컬렉션(여기서는 문자열)의 각 요소에 대해 특정 연산을 수행하여 그 결과를 새로운 컬렉션으로 반환한다.

여기서의 매핑은 문자열로 표현된 각 자릿수를 다시 정수로 변환하는 작업을 의미한다.

예를 들어, 숫자 123이 주어졌을 때, 매핑을 통해 문자열 "123"은 숫자 1, 2, 3으로 이루어진 컬렉션으로 변환된다. 

이것이 map 함수의 역할이다.


함수(function)

fun main() {

sum(20,40)

}

fun sum(num1 : Int, num2 : Int){
println(num1 + num2)
}
=> 60



fun main() {

println(sum(20,40))-------- 저방식도 가능하지만 val sumValue = sum(20,40)
                                                            printLn(sumValue)---도 가능 

}

fun sum(num1 : Int, num2 : Int) : Int{---------- 맨 뒤 Int result 타입도 정해줘야 하기때문
val result = num1 + num2
return result ----------  sum(20,40) 실행이 끝난후 result로 return 해라
}
=>60

실생활에 쓰고싶다
=>

fun bobMaking(time : Int){   ------밥솥 생각하면 쉬움
     println("$time 분 후에 밥이 완료됩니다."
}


함수 계산

fun main() {
     sumTwo(10, 4)
}

fun sumTwo(num1 : Int, num2 : Int) {

fun sumeTwo(){ --------숫자 2개를 더하는것
fun sumThree(){ -------숫자 3개를 더하는것
fun minus(){ -------숫자 2개를 빼는것
fun division(){ -------숫자 2개를 나누는것
fun remainder(){ -------숫자 2개를 나누고 난 뒤에 나머지를 알려주는 기능


=> 답안
    *val  result 는 곱

    sumTwo(10,4)
    sumThree(10,4,8)
    minus(6,3)
    division(6,3)
    remainder(9,7)
}

fun sumTwo(num1 : Int, num2 : Int) {
    println(num1 + num2)
   }
    =>14

    fun sumThree(num1 : Int, num2 : Int, num3 : Int){
        println(num1 + num2 + num3)
    }
    =>22

    fun minus(num1 : Int, num2 : Int){
        println(num1 - num2)
   }
    =>3

    
    fun division(num1 : Int, num2 : Int){
        println(num1 / num2)
    }
    =>2

    fun remainder(num1 : Int, num2 : Int){
        println(num1 % num2)
    }
    =>2


문제를 하나 만들면,

fun sumTwo(a: Int, b: Int): Int {
    // 여기에 코드를 작성해주세요.
}




답변

fun sumTwo(a: Int, b: Int): Int {
    return a + b
}

fun main() {
    val result = sumTwo(3, 5)
    println("두 정수의 합: $result")
}



